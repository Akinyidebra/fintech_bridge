import 'package:fintech_bridge/models/loan_model.dart';
import 'package:fintech_bridge/models/transaction_model.dart';

class DummyData {
  static List<Loan> loans = [
    Loan(
      id: 'loan-001',
      studentId: 'student-001',
      providerId: 'provider-001',
      amount: 10000,
      status: 'APPROVED',
      purpose: 'Tuition Fee',
      dueDate: DateTime.now().add(const Duration(days: 120)),
      createdAt: DateTime.now().subtract(const Duration(days: 60)),
      updatedAt: DateTime.now().subtract(const Duration(days: 60)),
    ),
    Loan(
      id: 'loan-002',
      studentId: 'student-001',
      providerId: 'provider-002',
      amount: 8000,
      status: 'APPROVED',
      purpose: 'Housing',
      dueDate: DateTime.now().add(const Duration(days: 90)),
      createdAt: DateTime.now().subtract(const Duration(days: 90)),
      updatedAt: DateTime.now().subtract(const Duration(days: 90)),
    ),
    Loan(
      id: 'loan-003',
      studentId: 'student-001',
      providerId: 'provider-003',
      amount: 5000,
      status: 'APPROVED',
      purpose: 'Textbooks and Supplies',
      dueDate: DateTime.now().add(const Duration(days: 180)),
      createdAt: DateTime.now().subtract(const Duration(days: 30)),
      updatedAt: DateTime.now().subtract(const Duration(days: 30)),
    ),
    Loan(
      id: 'loan-004',
      studentId: 'student-001',
      providerId: 'provider-004',
      amount: 12000,
      status: 'PENDING',
      purpose: 'Summer Research',
      dueDate: DateTime.now().add(const Duration(days: 150)),
      createdAt: DateTime.now().subtract(const Duration(days: 15)),
      updatedAt: DateTime.now().subtract(const Duration(days: 15)),
    ),
    Loan(
      id: 'loan-005',
      studentId: 'student-001',
      providerId: 'provider-005',
      amount: 7500,
      status: 'APPROVED',
      purpose: 'Study Abroad',
      dueDate: DateTime.now().add(const Duration(days: 210)),
      createdAt: DateTime.now().subtract(const Duration(days: 45)),
      updatedAt: DateTime.now().subtract(const Duration(days: 45)),
    ),
    Loan(
      id: 'loan-006',
      studentId: 'student-001',
      providerId: 'provider-006',
      amount: 6000,
      status: 'APPROVED',
      purpose: 'Living Expenses',
      dueDate: DateTime.now().add(const Duration(days: 100)),
      createdAt: DateTime.now().subtract(const Duration(days: 75)),
      updatedAt: DateTime.now().subtract(const Duration(days: 75)),
    ),
    Loan(
      id: 'loan-007',
      studentId: 'student-001',
      providerId: 'provider-007',
      amount: 9000,
      status: 'APPROVED',
      purpose: 'Technology Equipment',
      dueDate: DateTime.now().add(const Duration(days: 130)),
      createdAt: DateTime.now().subtract(const Duration(days: 40)),
      updatedAt: DateTime.now().subtract(const Duration(days: 40)),
    ),
    Loan(
      id: 'loan-008',
      studentId: 'student-001',
      providerId: 'provider-008',
      amount: 4500,
      status: 'APPROVED',
      purpose: 'Emergency Fund',
      dueDate: DateTime.now().add(const Duration(days: 60)),
      createdAt: DateTime.now().subtract(const Duration(days: 20)),
      updatedAt: DateTime.now().subtract(const Duration(days: 20)),
    ),
    Loan(
      id: 'loan-009',
      studentId: 'student-001',
      providerId: 'provider-009',
      amount: 11000,
      status: 'APPROVED',
      purpose: 'Internship Expenses',
      dueDate: DateTime.now().add(const Duration(days: 200)),
      createdAt: DateTime.now().subtract(const Duration(days: 50)),
      updatedAt: DateTime.now().subtract(const Duration(days: 50)),
    ),
    Loan(
      id: 'loan-010',
      studentId: 'student-001',
      providerId: 'provider-010',
      amount: 6500,
      status: 'APPROVED',
      purpose: 'Conference Travel',
      dueDate: DateTime.now().add(const Duration(days: 170)),
      createdAt: DateTime.now().subtract(const Duration(days: 35)),
      updatedAt: DateTime.now().subtract(const Duration(days: 35)),
    ),
  ];

  static List<Transaction> transactions = [
    Transaction(
      id: 'txn-001',
      loanId: 'loan-001',
      amount: 10000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 5)),
      status: 'COMPLETED',
      description: 'Tuition fee disbursement',
    ),
    Transaction(
      id: 'txn-002',
      loanId: 'loan-001',
      amount: 1000,
      type: 'REPAYMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 3)),
      status: 'COMPLETED',
      description: 'Monthly payment',
    ),
    Transaction(
      id: 'txn-003',
      loanId: 'loan-002',
      amount: 8000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 10)),
      status: 'COMPLETED',
      description: 'Housing loan disbursement',
    ),
    Transaction(
      id: 'txn-004',
      loanId: 'loan-002',
      amount: 800,
      type: 'REPAYMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 7)),
      status: 'COMPLETED',
      description: 'Housing loan first payment',
    ),
    Transaction(
      id: 'txn-005',
      loanId: 'loan-003',
      amount: 5000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 15)),
      status: 'COMPLETED',
      description: 'Textbooks and supplies loan',
    ),
    Transaction(
      id: 'txn-006',
      loanId: 'loan-004',
      amount: 12000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 20)),
      status: 'COMPLETED',
      description: 'Summer research grant',
    ),
    Transaction(
      id: 'txn-007',
      loanId: 'loan-005',
      amount: 7500,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 25)),
      status: 'COMPLETED',
      description: 'Study abroad expenses',
    ),
    Transaction(
      id: 'txn-008',
      loanId: 'loan-006',
      amount: 6000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 30)),
      status: 'COMPLETED',
      description: 'Living expenses loan',
    ),
    Transaction(
      id: 'txn-009',
      loanId: 'loan-007',
      amount: 9000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 35)),
      status: 'COMPLETED',
      description: 'Technology equipment loan',
    ),
    Transaction(
      id: 'txn-010',
      loanId: 'loan-008',
      amount: 4500,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 40)),
      status: 'COMPLETED',
      description: 'Emergency fund loan',
    ),
  ];
}
