import 'package:fintech_bridge/models/loan_model.dart';
import 'package:fintech_bridge/models/transaction_model.dart';
import 'package:fintech_bridge/models/student_model.dart';
import 'package:fintech_bridge/models/notification_model.dart';

class DummyData {
  static List<Loan> loans = [
    Loan(
      id: 'loan-001',
      studentId: 'student-001',
      providerId: 'provider-001',
      amount: 10000,
      status: 'APPROVED',
      purpose: 'Tuition Fee',
      interestRate: 0.1,
      termMonths: 3,
      monthlyPayment: 5000,
      remainingBalance: 5000,
      nextDueDate: DateTime.now().add(const Duration(days: 60)),
      dueDate: DateTime.now().add(const Duration(days: 120)),
      mpesaTransactionCode: 'MPE123456789',
      repaymentMethod: 'M-PESA',
      repaymentStartDate: DateTime.now().add(const Duration(days: 30)),
      latePaymentPenaltyRate: 5.0,
      createdAt: DateTime.now().subtract(const Duration(days: 60)),
      updatedAt: DateTime.now().subtract(const Duration(days: 60)),
    ),
    Loan(
      id: 'loan-002',
      studentId: 'student-001',
      providerId: 'provider-002',
      amount: 8000,
      status: 'APPROVED',
      purpose: 'Housing',
      interestRate: 0.1,
      termMonths: 3,
      monthlyPayment: 5000,
      remainingBalance: 5000,
      nextDueDate: DateTime.now().add(const Duration(days: 60)),
      dueDate: DateTime.now().add(const Duration(days: 90)),
      mpesaTransactionCode: 'MPE987654321',
      repaymentMethod: 'M-PESA',
      repaymentStartDate: DateTime.now().add(const Duration(days: 30)),
      latePaymentPenaltyRate: 5.0,
      createdAt: DateTime.now().subtract(const Duration(days: 90)),
      updatedAt: DateTime.now().subtract(const Duration(days: 90)),
    ),
    Loan(
      id: 'loan-003',
      studentId: 'student-001',
      providerId: 'provider-003',
      amount: 5000,
      status: 'APPROVED',
      purpose: 'Textbooks and Supplies',
      interestRate: 0.1,
      termMonths: 3,
      monthlyPayment: 5000,
      remainingBalance: 5000,
      nextDueDate: DateTime.now().add(const Duration(days: 60)),
      dueDate: DateTime.now().add(const Duration(days: 180)),
      mpesaTransactionCode: 'MPE456789012',
      repaymentMethod: 'M-PESA',
      repaymentStartDate: DateTime.now().add(const Duration(days: 30)),
      latePaymentPenaltyRate: 5.0,
      createdAt: DateTime.now().subtract(const Duration(days: 30)),
      updatedAt: DateTime.now().subtract(const Duration(days: 30)),
    ),
    Loan(
      id: 'loan-004',
      studentId: 'student-001',
      providerId: 'provider-004',
      amount: 12000,
      status: 'PENDING',
      purpose: 'Summer Research',
      interestRate: 0.1,
      termMonths: 3,
      monthlyPayment: 5000,
      remainingBalance: 12000,
      nextDueDate: DateTime.now().add(const Duration(days: 60)),
      dueDate: DateTime.now().add(const Duration(days: 150)),
      mpesaTransactionCode: '',
      repaymentMethod: 'M-PESA',
      repaymentStartDate: DateTime.now().add(const Duration(days: 30)),
      latePaymentPenaltyRate: 5.0,
      createdAt: DateTime.now().subtract(const Duration(days: 15)),
      updatedAt: DateTime.now().subtract(const Duration(days: 15)),
    ),
    Loan(
      id: 'loan-005',
      studentId: 'student-001',
      providerId: 'provider-005',
      amount: 7500,
      status: 'APPROVED',
      purpose: 'Study Abroad',
      interestRate: 0.1,
      termMonths: 3,
      monthlyPayment: 5000,
      remainingBalance: 5000,
      nextDueDate: DateTime.now().add(const Duration(days: 60)),
      dueDate: DateTime.now().add(const Duration(days: 210)),
      mpesaTransactionCode: 'MPE678901234',
      repaymentMethod: 'M-PESA',
      repaymentStartDate: DateTime.now().add(const Duration(days: 30)),
      latePaymentPenaltyRate: 5.0,
      createdAt: DateTime.now().subtract(const Duration(days: 45)),
      updatedAt: DateTime.now().subtract(const Duration(days: 45)),
    ),
    Loan(
      id: 'loan-006',
      studentId: 'student-001',
      providerId: 'provider-006',
      amount: 6000,
      status: 'APPROVED',
      purpose: 'Living Expenses',
      interestRate: 0.1,
      termMonths: 3,
      monthlyPayment: 5000,
      remainingBalance: 5000,
      nextDueDate: DateTime.now().add(const Duration(days: 60)),
      dueDate: DateTime.now().add(const Duration(days: 100)),
      mpesaTransactionCode: 'MPE789012345',
      repaymentMethod: 'M-PESA',
      repaymentStartDate: DateTime.now().add(const Duration(days: 30)),
      latePaymentPenaltyRate: 5.0,
      createdAt: DateTime.now().subtract(const Duration(days: 75)),
      updatedAt: DateTime.now().subtract(const Duration(days: 75)),
    ),
    Loan(
      id: 'loan-007',
      studentId: 'student-001',
      providerId: 'provider-007',
      amount: 9000,
      status: 'APPROVED',
      purpose: 'Technology Equipment',
      interestRate: 0.1,
      termMonths: 3,
      monthlyPayment: 5000,
      remainingBalance: 5000,
      nextDueDate: DateTime.now().add(const Duration(days: 60)),
      dueDate: DateTime.now().add(const Duration(days: 130)),
      mpesaTransactionCode: 'MPE890123456',
      repaymentMethod: 'M-PESA',
      repaymentStartDate: DateTime.now().add(const Duration(days: 30)),
      latePaymentPenaltyRate: 5.0,
      createdAt: DateTime.now().subtract(const Duration(days: 40)),
      updatedAt: DateTime.now().subtract(const Duration(days: 40)),
    ),
    Loan(
      id: 'loan-008',
      studentId: 'student-001',
      providerId: 'provider-008',
      amount: 4500,
      status: 'APPROVED',
      purpose: 'Emergency Fund',
      interestRate: 0.1,
      termMonths: 3,
      monthlyPayment: 5000,
      remainingBalance: 5000,
      nextDueDate: DateTime.now().add(const Duration(days: 60)),
      dueDate: DateTime.now().add(const Duration(days: 60)),
      mpesaTransactionCode: 'MPE901234567',
      repaymentMethod: 'M-PESA',
      repaymentStartDate: DateTime.now().add(const Duration(days: 30)),
      latePaymentPenaltyRate: 5.0,
      createdAt: DateTime.now().subtract(const Duration(days: 20)),
      updatedAt: DateTime.now().subtract(const Duration(days: 20)),
    ),
    Loan(
      id: 'loan-009',
      studentId: 'student-001',
      providerId: 'provider-009',
      amount: 11000,
      status: 'APPROVED',
      purpose: 'Internship Expenses',
      interestRate: 0.1,
      termMonths: 3,
      monthlyPayment: 5000,
      remainingBalance: 5000,
      nextDueDate: DateTime.now().add(const Duration(days: 60)),
      dueDate: DateTime.now().add(const Duration(days: 200)),
      mpesaTransactionCode: 'MPE012345678',
      repaymentMethod: 'M-PESA',
      repaymentStartDate: DateTime.now().add(const Duration(days: 30)),
      latePaymentPenaltyRate: 5.0,
      createdAt: DateTime.now().subtract(const Duration(days: 50)),
      updatedAt: DateTime.now().subtract(const Duration(days: 50)),
    ),
    Loan(
      id: 'loan-010',
      studentId: 'student-001',
      providerId: 'provider-010',
      amount: 6500,
      status: 'APPROVED',
      purpose: 'Conference Travel',
      interestRate: 0.1,
      termMonths: 3,
      monthlyPayment: 5000,
      remainingBalance: 5000,
      nextDueDate: DateTime.now().add(const Duration(days: 60)),
      dueDate: DateTime.now().add(const Duration(days: 170)),
      mpesaTransactionCode: 'MPE123450987',
      repaymentMethod: 'M-PESA',
      repaymentStartDate: DateTime.now().add(const Duration(days: 30)),
      latePaymentPenaltyRate: 5.0,
      createdAt: DateTime.now().subtract(const Duration(days: 35)),
      updatedAt: DateTime.now().subtract(const Duration(days: 35)),
    ),
  ];

  static List<Transaction> transactions = [
    Transaction(
      id: 'txn-001',
      loanId: 'loan-001',
      amount: 10000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 5)),
      status: 'COMPLETED',
      description: 'Tuition fee disbursement',
    ),
    Transaction(
      id: 'txn-002',
      loanId: 'loan-001',
      amount: 1000,
      type: 'REPAYMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 3)),
      status: 'COMPLETED',
      description: 'Monthly payment',
    ),
    Transaction(
      id: 'txn-003',
      loanId: 'loan-002',
      amount: 8000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 10)),
      status: 'COMPLETED',
      description: 'Housing loan disbursement',
    ),
    Transaction(
      id: 'txn-004',
      loanId: 'loan-002',
      amount: 800,
      type: 'REPAYMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 7)),
      status: 'COMPLETED',
      description: 'Housing loan first payment',
    ),
    Transaction(
      id: 'txn-005',
      loanId: 'loan-003',
      amount: 5000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 15)),
      status: 'COMPLETED',
      description: 'Textbooks and supplies loan',
    ),
    Transaction(
      id: 'txn-006',
      loanId: 'loan-004',
      amount: 12000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 20)),
      status: 'COMPLETED',
      description: 'Summer research grant',
    ),
    Transaction(
      id: 'txn-007',
      loanId: 'loan-005',
      amount: 7500,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 25)),
      status: 'COMPLETED',
      description: 'Study abroad expenses',
    ),
    Transaction(
      id: 'txn-008',
      loanId: 'loan-006',
      amount: 6000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 30)),
      status: 'COMPLETED',
      description: 'Living expenses loan',
    ),
    Transaction(
      id: 'txn-009',
      loanId: 'loan-007',
      amount: 9000,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 35)),
      status: 'COMPLETED',
      description: 'Technology equipment loan',
    ),
    Transaction(
      id: 'txn-010',
      loanId: 'loan-008',
      amount: 4500,
      type: 'DISBURSEMENT',
      createdAt: DateTime.now().subtract(const Duration(days: 40)),
      status: 'COMPLETED',
      description: 'Emergency fund loan',
    ),
  ];

  static List<Student> students = [
    Student(
      id: 'student-001',
      fullName: 'John Doe',
      universityEmail: 'john.doe@university.edu',
      studentId: 'UNI123456',
      phone: '+254712345678',
      course: 'Computer Science',
      yearOfStudy: 3,
      profileImage: 'https://example.com/profile.jpg',
      verified: true,
      verifiedAt: DateTime.now().subtract(const Duration(days: 120)),
      identificationImages: ['https://example.com/id_front.jpg', 'https://example.com/id_back.jpg'],
      mpesaPhone: '+254712345678',
      universityRegistrationNumber: 'CS/001/2023',
      institutionName: 'University of Technology',
      hasActiveLoan: true,
      guarantorContacts: ['+254723456789', '+254734567890'],
      createdAt: DateTime.now().subtract(const Duration(days: 150)),
      updatedAt: DateTime.now().subtract(const Duration(days: 120)),
    ),
    Student(
      id: 'student-002',
      fullName: 'Jane Smith',
      universityEmail: 'jane.smith@university.edu',
      studentId: 'UNI654321',
      phone: '+254723456789',
      course: 'Business Administration',
      yearOfStudy: 2,
      profileImage: 'https://example.com/jane_profile.jpg',
      verified: true,
      verifiedAt: DateTime.now().subtract(const Duration(days: 90)),
      identificationImages: ['https://example.com/jane_id_front.jpg', 'https://example.com/jane_id_back.jpg'],
      mpesaPhone: '+254723456789',
      universityRegistrationNumber: 'BA/002/2023',
      institutionName: 'University of Technology',
      hasActiveLoan: false,
      guarantorContacts: ['+254734567890', '+254745678901'],
      createdAt: DateTime.now().subtract(const Duration(days: 120)),
      updatedAt: DateTime.now().subtract(const Duration(days: 90)),
    ),
  ];

  static List<AppNotification> notifications = [
    AppNotification(
      id: 'notif-001',
      userId: 'student-001',
      title: 'Loan Approved',
      body: 'Your loan request for KES 10,000 has been approved.',
      type: 'LOAN_APPROVAL',
      isRead: false,
      createdAt: DateTime.now().subtract(const Duration(hours: 2)),
    ),
    AppNotification(
      id: 'notif-002',
      userId: 'student-001',
      title: 'Payment Reminder',
      body: 'Your loan payment of KES 5,000 is due in 3 days.',
      type: 'PAYMENT_REMINDER',
      isRead: true,
      createdAt: DateTime.now().subtract(const Duration(days: 1)),
    ),
    AppNotification(
      id: 'notif-003',
      userId: 'student-001',
      title: 'Account Verified',
      body: 'Your student account has been verified successfully.',
      type: 'ACCOUNT_VERIFICATION',
      isRead: true,
      createdAt: DateTime.now().subtract(const Duration(days: 7)),
    ),
    AppNotification(
      id: 'notif-004',
      userId: 'provider-001',
      title: 'New Loan Request',
      body: 'A new loan request of KES 12,000 is waiting for your approval.',
      type: 'NEW_LOAN_REQUEST',
      isRead: false,
      createdAt: DateTime.now().subtract(const Duration(hours: 5)),
    ),
  ];
}